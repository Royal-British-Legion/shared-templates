name: Terraform Actions
description: 'Performs Terraform Init, Plan, and Apply'
inputs:
  unit:
    description: 'Unit to deployment is for'
    required: true
  environment:
    description: 'Environment to deploy resources to'
    required: true
  resource:
    description: 'Resource to deploy'
    required: true
  repository:
    description: 'Repository to checkout into'
    required: true
  path:
    description: 'Path to resources from calling workflow'
    required: true
  AZURE_AD_CLIENT_ID:
    description: 'Azure Client ID'
    required: true
  AZURE_AD_CLIENT_SECRET:
    description: 'Azure Client ID'
    required: true
  AZURE_SUBSCRIPTION_ID:
    description: 'Azure Client ID'
    required: true
  AZURE_AD_TENANT_ID:
    description: 'Azure Client ID'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Checkout my-terraform-app
      uses: actions/checkout@v2
      with:
        repository: ${{ inputs.repository }}
        ref: main
        path: ${{ inputs.path }}

    - name: Az login
      uses: azure/login@v1
      with:
        creds: ${{ inputs.azure-credentials }}
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.4.1
        terraform_wrapper: false

    - name: Terraform Init
      env:
        ARM_CLIENT_ID: ${{ inputs.AZURE_AD_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ inputs.AZURE_AD_CLIENT_SECRET }}
        ARM_SUBSCRIPTION_ID: ${{ inputs.AZURE_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ inputs.AZURE_AD_TENANT_ID }}
      run: "terraform init -upgrade -backend-config='key=${{ inputs.unit }}/${{ inputs.environment }}/${{ inputs.resource }}.tfstate'"
      shell: bash
      working-directory: "./infrastructure/terraform/${{ inputs.resource }}"

    - name: Terraform Plan
      env:
        ARM_CLIENT_ID: ${{ inputs.AZURE_AD_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ inputs.AZURE_AD_CLIENT_SECRET }}
        ARM_SUBSCRIPTION_ID: ${{ inputs.AZURE_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ inputs.AZURE_AD_TENANT_ID }}
      id: plan
      run: "terraform plan -input=false -var-file=tfvars/${{ inputs.environment }}.tfvars --out=planfile"
      shell: bash
      working-directory: "./infrastructure/terraform/${{ inputs.resource }}"

    - name: Terraform Apply
      env:
        ARM_CLIENT_ID: ${{ inputs.AZURE_AD_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ inputs.AZURE_AD_CLIENT_SECRET }}
        ARM_SUBSCRIPTION_ID: ${{ inputs.AZURE_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ inputs.AZURE_AD_TENANT_ID }}
      run: "terraform apply -auto-approve planfile"
      shell: bash
      working-directory: "./infrastructure/terraform/${{ inputs.resource }}"